<?php
declare (strict_types = 1);

namespace Kkdshka\TodoList\Model;

use PHPUnit\Framework\TestCase;
use Phake;
use Kkdshka\TodoList\Repository\TaskSqliteRepository;
use Kkdshka\TodoList\Model\Task;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-08-15 at 19:38:39.
 */
class TaskManagerTest extends TestCase {
    
    private $task;
    private $repository;
    private $taskManager;
    
    public function setUp() {
        $this->task = Phake::mock(Task::class);
        $this->repository = Phake::mock(TaskSqliteRepository::class);
        $this->taskManager = new TaskManager($this->repository);
    }
    
    /**
     * @test
     * @covers Kkdshka\TodoList\Model\TaskManager::create
     */
    public function shouldCreateTask() {
        $this->taskManager->create($this->task);
        
        Phake::verify($this->repository)->create($this->task);
    }

    /**
     * @test
     * @covers Kkdshka\TodoList\Model\TaskManager::update
     */
    public function shouldUpdateTask() {
        $this->taskManager->update($this->task);
        
        Phake::verify($this->repository)->update($this->task);
    }
    
    /**
     * @test
     * @covers Kkdshka\TodoList\Model\TaskManager::delete
     */
    public function shouldDeleteTask() {
        $this->taskManager->delete($this->task);
        
        Phake::verify($this->repository)->delete($this->task);
    }

    /**
     * @test
     * @covers Kkdshka\TodoList\Model\TaskManager::find
     */
    public function shouldFindTaskById() {
        $user = Phake::mock(User::class);
        
        Phake::when($this->repository)->find(1, $user)->thenReturn($this->task);
        
        $this->assertEquals($this->task, $this->taskManager->find(1, $user));
    }
    
    /**
     * @test
     * @covers Kkdshka\TodoList\Model\TaskManager::getByUser
     */
    public function shouldGetByUser() {
        $user = Phake::mock(User::class);
        
        Phake::when($this->repository)->getUserTasks($user)->thenReturn([$this->task]);
        
        $tasks = $this->taskManager->getUserTasks($user); 
        Phake::verify($this->repository)->getUserTasks($user);
        $this->assertEquals([$this->task], $tasks);
    }
    
}
